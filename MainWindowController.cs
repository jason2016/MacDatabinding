// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using AppKit;

namespace MacDatabinding
{
	public partial class MainWindowController : NSWindowController
	{
		#region Computed Properties
		public MainViewController Controller {
			get { return ContentViewController as MainViewController; }
		}
		#endregion

		#region Constructors
		public MainWindowController (IntPtr handle) : base (handle)
		{
		}
		#endregion

		#region Override Methods
		public override void AwakeFromNib ()
		{
			base.AwakeFromNib ();

			// Wire-up controls
			Addbutton.Active = false;
			Addbutton.Activated += (sender, e) => {
				// Take action based on type
				switch(Controller.ViewType) {
				case SubviewType.TableBinding:
				case SubviewType.CollectionView:
					Controller.PerformSegue("AddSegue", Controller);
					break;
				}
			};

			EditButton.Active = false;
			EditButton.Activated += (sender, e) => {
				// Take action based on type
				switch(Controller.ViewType) {
				case SubviewType.TableBinding:
					var controller = Controller.ContentController as TableViewController;
					controller.EditPerson(this.Window);
					break;
				case SubviewType.CollectionView:
//					var collection = SubviewController as SubviewCollectionViewController;
//					collection.EditPerson(this);
					break;
				}
			};

			DeleteButton.Active = false;
			DeleteButton.Activated += (sender, e) => {
				// Take action based on type
				switch(Controller.ViewType) {
				case SubviewType.TableBinding:
					var controller = Controller.ContentController as TableViewController;
					controller.DeletePerson(this.Window);
					break;
				case SubviewType.CollectionView:
//					var collection = SubviewController as SubviewCollectionViewController;
//					collection.DeletePerson(this);
					break;
				}
			};

			Search.Enabled = false;
			Search.EditingEnded += (sender, e) => {
				// Take action based on type
				switch(Controller.ViewType) {
				case SubviewType.TableBinding:
					var controller = Controller.ContentController as TableViewController;
					controller.FindPerson(Search.StringValue);
					break;
				case SubviewType.CollectionView:
//					var collection = SubviewController as SubviewCollectionViewController;
//					collection.FindPerson(Search.StringValue);
					break;
				}
			};

			// Attach window to view
			Controller.WindowController = this;
		}
		#endregion

		#region Public Methods
		public void UpdateUI() {
			// Take action on type
			switch (Controller.ViewType) {
			case SubviewType.TableBinding:
				Addbutton.Active = true;
				EditButton.Active = true;
				DeleteButton.Active = true;
				Search.Enabled = true;
				break;
			case SubviewType.CollectionView:
				Addbutton.Active = true;
				EditButton.Active = true;
				DeleteButton.Active = true;
				Search.Enabled = true;
				break;
			default:
				Addbutton.Active = false;
				EditButton.Active = false;
				DeleteButton.Active = false;
				Search.Enabled = false;
				break;
			}
		}
		#endregion
	}
}
